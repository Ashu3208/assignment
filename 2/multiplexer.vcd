$date
	Mon Jan 16 03:32:47 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_multiplexer $end
$var wire 32 ! y [31:0] $end
$var reg 32 " a [31:0] $end
$var reg 32 # b [31:0] $end
$var reg 32 $ c [31:0] $end
$var reg 32 % d [31:0] $end
$var reg 1 & s0 $end
$var reg 1 ' s1 $end
$scope module uut $end
$var wire 32 ( a [31:0] $end
$var wire 32 ) b [31:0] $end
$var wire 32 * c [31:0] $end
$var wire 32 + d [31:0] $end
$var wire 1 & s0 $end
$var wire 1 ' s1 $end
$var parameter 32 , w $end
$var reg 32 - y [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11111 ,
$end
#0
$dumpvars
b1100100 -
b111011000 +
b110000010 *
b111111000 )
b1100100 (
0'
0&
b111011000 %
b110000010 $
b111111000 #
b1100100 "
b1100100 !
$end
#100000
b111111000 !
b111111000 -
1'
#200000
b110000010 !
b110000010 -
1&
0'
#400000
b111011000 !
b111011000 -
1'
#500000
b1100100 !
b1100100 -
0&
0'
#550000
b1010110000 !
b1010110000 -
b1010110000 "
b1010110000 (
#600000
b1001010100 !
b1001010100 -
1'
b1001010100 #
b1001010100 )
#650000
b111011000 !
b111011000 -
1&
